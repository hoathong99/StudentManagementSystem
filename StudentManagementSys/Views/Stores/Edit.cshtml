@model StudentManagementSys.Views.ViewModels.StoresVM

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Store</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="SID" />
            <div class="form-group">
                <label asp-for="OwnerID" class="control-label"></label>
                <input placeholder="@Model.OwnerID" disabled class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="SID" class="control-label"></label>
                <input placeholder="@Model.SID" disabled class="form-control" />
            </div>
            <div class="form-group" hidden>
                <label asp-for="OwnerID" class="control-label"></label>
                <input asp-for="OwnerID" class="form-control" />
                <span asp-validation-for="OwnerID" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    Active
                    <input class="form-check-input" asp-for="Status" /> @*@Html.DisplayNameFor(model => model.Status)*@
                </label>
            </div>
            <div class="form-group">
                <label asp-for="description" class="control-label"></label>
                <input asp-for="description" class="form-control" />
                <span asp-validation-for="description" class="text-danger"></span>
            </div>
            <div class="form-group">
                @if (User.IsInRole("staff"))
                {
                    <label asp-for="Type" class="control-label"></label>
                    <select asp-for="Type" asp-items="@Model.SelectStoreTypeLst" class="form-control" aria-required="true">
                        <option disabled selected>Select type</option>
                    </select>
                    <span asp-validation-for="Type" class="text-danger"></span>
                }
                @if (User.IsInRole("student"))
                {
                    <label asp-for="Type" class="control-label"></label>
                    <input asp-for="Type" hidden class="form-control" />
                    <span asp-validation-for="Type" class="text-danger"></span>
                    <input placeholder="student" disabled class="form-control" />
                }
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="CreateItem" asp-route-classId="SID">add new item</a>
</div>
<div>
    <h4>items: </h4>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    ID
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.price)
                    </td>
                    <td>
                        <a asp-action="DeleteItem" asp-route-csId="@item.ItemID">Remove</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@if (User.IsInRole("staff"))
{
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
